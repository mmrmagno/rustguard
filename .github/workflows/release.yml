name: Release

on:
  push:
    tags:
      - 'v*'  # Trigger on any tag starting with "v"

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux x86_64 build
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binaryName: rustguard-linux
            artifact: target/x86_64-unknown-linux-gnu/release/rustguard-linux
            artifactName: rustguard-linux
          # Linux ARM64 (aarch64) build
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            binaryName: rustguard-linux-arm64
            artifact: target/aarch64-unknown-linux-gnu/release/rustguard-linux-arm64
            artifactName: rustguard-linux-arm64
          # macOS x86_64 build
          - os: macos-latest
            target: x86_64-apple-darwin
            binaryName: rustguard-macos
            artifact: target/x86_64-apple-darwin/release/rustguard-macos
            artifactName: rustguard-macos
          # macOS ARM64 (Apple Silicon) build
          - os: macos-latest
            target: aarch64-apple-darwin
            binaryName: rustguard-macos-arm64
            artifact: target/aarch64-apple-darwin/release/rustguard-macos-arm64
            artifactName: rustguard-macos-arm64
          # Windows x86_64 build
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binaryName: rustguard-windows.exe
            artifact: target/x86_64-pc-windows-msvc/release/rustguard-windows.exe
            artifactName: rustguard-windows.exe
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Update rustup toolchain
        run: rustup update stable

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      # For aarch64-unknown-linux-gnu, configure the cross linker.
      - name: Configure cross linker for aarch64 (Linux)
        if: runner.os == 'Linux' && matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          mkdir -p .cargo
          echo '[target.aarch64-unknown-linux-gnu]' > .cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> .cargo/config.toml

      - name: Install Linux cross-compilers for ARM targets
        if: runner.os == 'Linux' && matrix.target == 'aarch64-unknown-linux-gnu'
        run: sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxcb1-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      # Rename the binary for Linux/macOS targets.
      - name: Rename binary for Linux/macOS
        if: runner.os != 'Windows'
        run: |
          mv target/${{ matrix.target }}/release/rustguard target/${{ matrix.target }}/release/${{ matrix.binaryName }}
        shell: bash

      # Rename the Windows binary using PowerShell.
      - name: Rename binary for Windows
        if: runner.os == 'Windows'
        run: |
          Rename-Item -Path "target/${{ matrix.target }}\release\rustguard.exe" -NewName "${{ matrix.binaryName }}"
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifactName }}
          path: ${{ matrix.artifact }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List artifacts (debugging)
        run: ls -R artifacts

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/rustguard-linux/rustguard-linux
            artifacts/rustguard-linux-arm64/rustguard-linux-arm64
            artifacts/rustguard-macos/rustguard-macos
            artifacts/rustguard-macos-arm64/rustguard-macos-arm64
            artifacts/rustguard-windows.exe/rustguard-windows.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
