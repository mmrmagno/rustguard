name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target: [
          x86_64-unknown-linux-gnu,
          aarch64-unknown-linux-gnu,
          x86_64-apple-darwin,
          aarch64-apple-darwin,
          x86_64-pc-windows-msvc
        ]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true

    - name: Build binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: rustguard-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/rustguard${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
